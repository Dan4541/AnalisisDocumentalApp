@using AnalisisDocumentalApp.Models
@using AnalisisDocumentalApp.Services
@inject ILogService LogService

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">AnalisisDocumentalApp</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="oi oi-plus" aria-hidden="true"></span> Counter
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="fetchdata">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="analysis" @onclick="@(() => LogNavigation("Analysis"))">
                <span class="oi oi-plus" aria-hidden="true"></span> Upload Files
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="history" @onclick="@(() => LogNavigation("History"))">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Logs History
            </NavLink>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task LogNavigation(string page)
    {
        await LogService.LogActivityAsync(LogType.UserInteraction, $"Navigated to page: {page}");
    }
}
